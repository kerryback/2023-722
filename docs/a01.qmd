---
title:  "Introduction to Options"
author: <br><br><br><br><span style="font-family:perpetua; font-variant:small-caps; color:#606060;">Kerry Back</span><br><br><img src="RiceBusiness-transparent-logo-sm.png"  height=80>
output-dir: docs
execute:
  echo: false
  jupyter: python3
format: 
  revealjs:
    highlight-style: monokai
    code-fold: true
    scrollable: true
    slide-number: true
    preview-links: true
    self-contained: true
    controls: true
    transition: fade
    theme: [solarized, 721.scss]
    incremental: true
---

##  Financial Options

- A financial option is a right to buy or sell a financial security.

- The right trades separately from the (underlying) security and usually
even on a different exchange.

- The rights are not (usually) issued by the companies who issue the
underlying securities. 
- Instead, the rights are created when someone
buys one from someone else.  The number that exist
at any point in time is called the open interest.

# Calls and Puts


- A [call]{style="color: tomato; fontweight: bold;"} option gives the holder the right to [buy]{style="color: tomato; fontweight: bold;"} an asset at a
pre-specified price.

- A [put]{style="color: tomato; fontweight: bold;"} option gives the holder the right to [sell]{style="color: tomato; fontweight: bold;"} an asset at a
pre-specified price.

- The pre-specified price is called the exercise price or strike price.


## Maturities

- An option is valid for a specified period of time, the end of which is
called its expiration date or maturity date.

- Most financial options can be exercised at any time the owner wishes,
prior to maturity. Such options are called American.

- There are some options that can only be exercised on the maturity
date. They are called European.

- Both types are traded on both continents. Stock options traded on the CBOE in the U.S. are always American.

## Option premia

- You pay upfront to acquire an option. The amount you pay is called
the option premium. It is not part of the contract but instead is
determined in the market.

- The buyer of an option pays upfront and then has an option.  The buyer is said to be long the option.

- The seller of an option receives the buyer's payment and then has an obligation.  The seller is said to be short the option.

## Clearinghouse and margin

- For exchange traded options, the exchange clearinghouse becomes the counterparty to both the longs and the shorts.

- When a long chooses to exercise, the clearinghouse delivers.

- Simultaneously, the clearinghouse randomly chooses a short and requires it to deliver to the clearinghouse.

- Sellers of options must post margin, so the clearinghouse and their brokers are confident they will be able to deliver.

## Buying, Selling, and Exercising

- Anyone with an appropriate brokerage account can at any time either
buy or sell an option.

- Individuals usually buy options instead of selling them, though they
may sell as part of a portfolio (e.g., buy one option and sell another).

- After buying an option, investors usually sell it later instead of
exercising. However, the right to exercise is what gives an option its
value.


# Market data {background-color="#657b83" color="#fdf6e3"}


## Getting market data from Yahoo

. . .

``` p
import yfinance as yf

tick = yf.Ticker("CVX")
lastprice = tick.history().Close.iloc[-1]
print(f"last CVX price was ${lastprice:.2f}")

tick.options
```

. . .

```{python}
import yfinance as yf

tick = yf.Ticker("CVX")
lastprice = tick.history().Close.iloc[-1]
print(f"last CVX price was ${lastprice:.2f}")

tick.options
```

## Calls and puts for specific maturity <a href="https://bbcx-investments.com/futures-options/market-data"><img src="Rice_Owl.jpg" style="width:.65in;" align="right"> </a>

. . .

``` p
maturity = tick.options[0]
options = tick.option_chain(maturity)
calls = options.calls
puts = options.puts
calls.info()
```

. . .

```{python}
maturity = tick.options[0]
options = tick.option_chain(maturity)
calls = options.calls
puts = options.puts
calls.info()
```

# {.smaller}

```{python}
calls.head(2).T
```